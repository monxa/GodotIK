name: "Build Action"
description: "A composite action to build the project using SCons internal caching, and optionally zip the addons directory."
inputs:
  build_platform:
    description: "The target platform for the build (e.g., linux, windows, macos, ios, android, web)"
    required: true
  zipped:
    description: "If true, the godot_project/addons directory will be zipped into addons.zip"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Restore SCons cache directory
      id: restore
      uses: actions/cache@v4
      with:
        path: .scons-cache
        key: ${{ runner.os }}-scons-cache-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-scons-cache-

    - name: Install build dependencies
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y scons g++ zip
          if [[ "${{ inputs.build_platform }}" == "windows" ]]; then
            sudo apt-get install -y mingw-w64
          fi
          if [[ "${{ inputs.build_platform }}" == "android" ]]; then
            sudo apt-get install -y android-sdk
          fi
          if [[ "${{ inputs.build_platform }}" == "web" ]]; then
            sudo apt-get install -y emscripten
          fi
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install scons
          if [[ "${{ inputs.build_platform }}" == "ios" ]]; then
            brew install ios-sim
          fi
        fi
      shell: bash

    - name: Run SCons build for ${{ inputs.build_platform }}
      env:
        SCONS_CACHE_DIR: .scons-cache
      run: scons platform=${{ inputs.build_platform }}
      shell: bash

    - name: Save SCons cache directory
      id: cache
      if: steps.restore.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: .scons-cache
        key: ${{ runner.os }}-scons-cache-${{ hashFiles('**/*') }}

    - name: Zip addons directory
      if: ${{ inputs.zipped == 'true' }}
      run: |
        if [ -d "godot_project/addons" ]; then
          zip -r addons.zip godot_project/addons
        else
          echo "Directory godot_project/addons not found."
          exit 1
        fi
      shell: bash